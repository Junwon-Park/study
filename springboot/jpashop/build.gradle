plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // 이 라이브러리를 설치하면 templetes/application.yml(properties) 파일에 지정한 설정들을 자동으로 읽어서 등록한다.
	// 그리고 @Entity, @persistenceContext, @Id, @GeneratedValue 등과 같은 JPA 애노테이션 들을 스프링 부트가 처리할 수 있도록 해준다.
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0' // 프로젝트 중간에 추가한 외부 라이브러리는 마지막에 버전 정보를 넣어줘야 한다.
	// DB 쿼리 파라미터 로그에 들어간 값을 볼 수 있게 해주는 라이브러리

	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
